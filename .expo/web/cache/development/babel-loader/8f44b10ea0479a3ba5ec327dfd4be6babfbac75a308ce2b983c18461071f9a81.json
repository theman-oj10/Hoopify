{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Logo from \"./Images/Logo.png\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from \"../../firebase\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignInScreen = function SignInScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.replace('HomePage');\n      }\n    });\n    return unsubscribe;\n  }, []);\n  var handleSignUp = function handleSignUp() {\n    createUserWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Registered with:', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n  var handleLogin = function handleLogin() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Logged in with:', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n  return _jsx(KeyboardAvoidingView, {\n    style: styles.root,\n    behavior: \"padding\",\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"hoopify\"\n      }), _jsx(Image, {\n        source: Logo,\n        style: styles.logo,\n        resizeMode: \"contain\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\",\n        placeholderTextColor: \"#888\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#888\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: handleLogin,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSignUp,\n        style: [styles.button, styles.registerButton],\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Register\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: 'pink',\n    paddingHorizontal: 20,\n    justifyContent: 'center'\n  },\n  container: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: 'blue',\n    textTransform: 'uppercase',\n    letterSpacing: 3\n  },\n  logo: {\n    width: '70%',\n    height: 200,\n    borderRadius: 10,\n    marginBottom: 40\n  },\n  input: {\n    backgroundColor: '#fff',\n    width: '100%',\n    borderColor: '#e8e8e8',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 15,\n    marginTop: 10,\n    marginBottom: 20,\n    fontSize: 16,\n    color: '#555'\n  },\n  button: {\n    backgroundColor: 'blue',\n    width: '100%',\n    paddingVertical: 14,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  registerButton: {\n    backgroundColor: '#2196f3',\n    marginTop: 20\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default SignInScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","Image","StyleSheet","TextInput","KeyboardAvoidingView","ScrollView","TouchableOpacity","Logo","createUserWithEmailAndPassword","signInWithEmailAndPassword","auth","useNavigation","jsx","_jsx","jsxs","_jsxs","SignInScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","navigation","unsubscribe","onAuthStateChanged","user","replace","handleSignUp","then","userCredentials","console","log","catch","error","alert","message","handleLogin","style","styles","root","behavior","children","contentContainerStyle","container","title","source","logo","resizeMode","input","placeholder","placeholderTextColor","value","onChangeText","text","secureTextEntry","onPress","button","buttonText","registerButton","create","flex","backgroundColor","paddingHorizontal","justifyContent","flexGrow","alignItems","fontSize","fontWeight","marginBottom","color","textTransform","letterSpacing","width","height","borderRadius","borderColor","borderWidth","marginTop","paddingVertical"],"sources":["C:/Users/Adarsh/Desktop/android-test/Screens/SignInScreen/SignInScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Image, StyleSheet, TextInput, KeyboardAvoidingView, ScrollView, TouchableOpacity } from 'react-native';\r\nimport Logo from './Images/Logo.png';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../../firebase';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst SignInScreen = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigation = useNavigation();\r\n  \r\n    useEffect(() => {\r\n      const unsubscribe = auth.onAuthStateChanged(user => {\r\n        if (user) {\r\n          navigation.replace('HomePage');\r\n        }\r\n      });\r\n      return unsubscribe;\r\n    }, []);\r\n  \r\n    const handleSignUp = () => {\r\n      createUserWithEmailAndPassword(auth, email, password)\r\n        .then(userCredentials => {\r\n          const user = userCredentials.user;\r\n          console.log('Registered with:', user.email);\r\n        })\r\n        .catch(error => alert(error.message));\r\n    };\r\n  \r\n    const handleLogin = () => {\r\n      signInWithEmailAndPassword(auth, email, password)\r\n        .then(userCredentials => {\r\n          const user = userCredentials.user;\r\n          console.log('Logged in with:', user.email);\r\n        })\r\n        .catch(error => alert(error.message));\r\n    };\r\n  \r\n    return (\r\n      <KeyboardAvoidingView style={styles.root} behavior=\"padding\">\r\n        <ScrollView contentContainerStyle={styles.container}>\r\n          <Text style={styles.title}>hoopify</Text>\r\n          <Image source={Logo} style={styles.logo} resizeMode=\"contain\" />\r\n  \r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"#888\"\r\n            value={email}\r\n            onChangeText={text => setEmail(text)}\r\n          />\r\n  \r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"#888\"\r\n            secureTextEntry\r\n            value={password}\r\n            onChangeText={text => setPassword(text)}\r\n          />\r\n  \r\n          <TouchableOpacity onPress={handleLogin} style={styles.button}>\r\n            <Text style={styles.buttonText}>Login</Text>\r\n          </TouchableOpacity>\r\n  \r\n          <TouchableOpacity onPress={handleSignUp} style={[styles.button, styles.registerButton]}>\r\n            <Text style={styles.buttonText}>Register</Text>\r\n          </TouchableOpacity>\r\n        </ScrollView>\r\n      </KeyboardAvoidingView>\r\n    );\r\n  };\r\n  \r\n  const styles = StyleSheet.create({\r\n    root: {\r\n      flex: 1,\r\n      backgroundColor: 'pink',\r\n      paddingHorizontal: 20,\r\n      justifyContent: 'center',\r\n    },\r\n    container: {\r\n      flexGrow: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    title: {\r\n      fontSize: 50,\r\n      fontWeight: 'bold',\r\n      marginBottom: 20,\r\n      color: 'blue',\r\n      textTransform: 'uppercase',\r\n      letterSpacing: 3,\r\n    },\r\n    logo: {\r\n      width: '70%',\r\n      height: 200,\r\n      borderRadius: 10,\r\n      marginBottom: 40,\r\n    },\r\n    input: {\r\n      backgroundColor: '#fff',\r\n      width: '100%',\r\n      borderColor: '#e8e8e8',\r\n      borderWidth: 1,\r\n      borderRadius: 5,\r\n      paddingHorizontal: 15,\r\n      marginTop: 10,\r\n      marginBottom: 20,\r\n      fontSize: 16,\r\n      color: '#555',\r\n    },\r\n    button: {\r\n      backgroundColor: 'blue',\r\n      width: '100%',\r\n      paddingVertical: 14,\r\n      borderRadius: 10,\r\n      alignItems: 'center',\r\n      marginTop: 10,\r\n    },\r\n    registerButton: {\r\n      backgroundColor: '#2196f3',\r\n      marginTop: 20,\r\n    },\r\n    buttonText: {\r\n      color: 'white',\r\n      fontSize: 16,\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n  \r\n  export default SignInScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}