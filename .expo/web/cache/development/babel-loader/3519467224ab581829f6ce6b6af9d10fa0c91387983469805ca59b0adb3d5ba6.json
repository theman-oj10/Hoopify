{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport \"./drop-file-input.css\";\nimport { ImageConfig } from \"../../config/ImageConfig\";\nimport uploadImg from \"../../assets/cloud-upload-regular-240.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar DropFileInput = function DropFileInput(props) {\n  var wrapperRef = useRef(null);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    fileList = _useState2[0],\n    setFileList = _useState2[1];\n  var onDragEnter = function onDragEnter() {\n    return wrapperRef.current.classList.add('dragover');\n  };\n  var onDragLeave = function onDragLeave() {\n    return wrapperRef.current.classList.remove('dragover');\n  };\n  var onDrop = function onDrop() {\n    return wrapperRef.current.classList.remove('dragover');\n  };\n  var onFileDrop = function onFileDrop(e) {\n    var newFile = e.target.files[0];\n    if (newFile) {\n      var updatedList = [newFile];\n      setFileList(updatedList);\n      props.onFileChange(updatedList);\n    }\n  };\n  var fileRemove = function fileRemove(file) {\n    var updatedList = _toConsumableArray(fileList);\n    updatedList.splice(fileList.indexOf(file), 1);\n    setFileList(updatedList);\n    props.onFileChange(updatedList);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(\"div\", {\n      ref: wrapperRef,\n      className: \"drop-file-input\",\n      onDragEnter: onDragEnter,\n      onDragLeave: onDragLeave,\n      onDrop: onDrop,\n      children: [_jsxs(\"div\", {\n        className: \"drop-file-input__label\",\n        children: [_jsx(\"img\", {\n          src: uploadImg,\n          alt: \"\"\n        }), _jsx(\"p\", {\n          children: \"Drag & Drop your files here\"\n        })]\n      }), _jsx(\"input\", {\n        type: \"file\",\n        value: \"\",\n        onChange: onFileDrop\n      })]\n    }), fileList.length > 0 ? _jsxs(\"div\", {\n      className: \"drop-file-preview\",\n      children: [_jsx(\"p\", {\n        className: \"drop-file-preview__title\",\n        children: \"Ready to upload\"\n      }), fileList.map(function (item, index) {\n        return _jsxs(\"div\", {\n          className: \"drop-file-preview__item\",\n          children: [_jsx(\"img\", {\n            src: ImageConfig[item.type.split('/')[1]] || ImageConfig['default'],\n            alt: \"\"\n          }), _jsxs(\"div\", {\n            className: \"drop-file-preview__item__info\",\n            children: [_jsx(\"p\", {\n              children: item.name\n            }), _jsxs(\"p\", {\n              children: [item.size, \"B\"]\n            })]\n          }), _jsx(\"span\", {\n            className: \"drop-file-preview__item__del\",\n            onClick: function onClick() {\n              return fileRemove(item);\n            },\n            children: \"x\"\n          })]\n        }, index);\n      })]\n    }) : null]\n  });\n};\nDropFileInput.propTypes = {\n  onFileChange: PropTypes.func\n};\nexport default DropFileInput;","map":{"version":3,"names":["React","useRef","useState","PropTypes","ImageConfig","uploadImg","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DropFileInput","props","wrapperRef","_useState","_useState2","_slicedToArray","fileList","setFileList","onDragEnter","current","classList","add","onDragLeave","remove","onDrop","onFileDrop","e","newFile","target","files","updatedList","onFileChange","fileRemove","file","_toConsumableArray","splice","indexOf","children","ref","className","src","alt","type","value","onChange","length","map","item","index","split","name","size","onClick","propTypes","func"],"sources":["C:/Users/Adarsh/Desktop/android-test/components/drop-file-input/DropFileInput.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './drop-file-input.css';\r\n\r\nimport { ImageConfig } from '../../config/ImageConfig'; \r\nimport uploadImg from '../../assets/cloud-upload-regular-240.png';\r\n\r\nconst DropFileInput = props => {\r\n\r\n    const wrapperRef = useRef(null);\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const onDragEnter = () => wrapperRef.current.classList.add('dragover');\r\n\r\n    const onDragLeave = () => wrapperRef.current.classList.remove('dragover');\r\n\r\n    const onDrop = () => wrapperRef.current.classList.remove('dragover');\r\n\r\n    const onFileDrop = (e) => {\r\n        const newFile = e.target.files[0];\r\n        if (newFile) {\r\n            const updatedList = [newFile];\r\n            setFileList(updatedList);\r\n            props.onFileChange(updatedList);\r\n        }\r\n    }\r\n\r\n    const fileRemove = (file) => {\r\n        const updatedList = [...fileList];\r\n        updatedList.splice(fileList.indexOf(file), 1);\r\n        setFileList(updatedList);\r\n        props.onFileChange(updatedList);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                ref={wrapperRef}\r\n                className=\"drop-file-input\"\r\n                onDragEnter={onDragEnter}\r\n                onDragLeave={onDragLeave}\r\n                onDrop={onDrop}\r\n            >\r\n                <div className=\"drop-file-input__label\">\r\n                    <img src={uploadImg} alt=\"\" />\r\n                    <p>Drag & Drop your files here</p>\r\n                </div>\r\n                <input type=\"file\" value=\"\" onChange={onFileDrop}/>\r\n            </div>\r\n            {\r\n                fileList.length > 0 ? (\r\n                    <div className=\"drop-file-preview\">\r\n                        <p className=\"drop-file-preview__title\">\r\n                            Ready to upload\r\n                        </p>\r\n                        {\r\n                            fileList.map((item, index) => (\r\n                                <div key={index} className=\"drop-file-preview__item\">\r\n                                    <img src={ImageConfig[item.type.split('/')[1]] || ImageConfig['default']} alt=\"\" />\r\n                                    <div className=\"drop-file-preview__item__info\">\r\n                                        <p>{item.name}</p>\r\n                                        <p>{item.size}B</p>\r\n                                    </div>\r\n                                    <span className=\"drop-file-preview__item__del\" onClick={() => fileRemove(item)}>x</span>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nDropFileInput.propTypes = {\r\n    onFileChange: PropTypes.func\r\n}\r\n\r\nexport default DropFileInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}